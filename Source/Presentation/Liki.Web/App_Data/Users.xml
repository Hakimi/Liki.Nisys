<DataModel name="Users" formatVersion="10" modelVersion="2" defQuery="" id="da2908fd-e822-4b8f-9f38-2cc6f9541f36">
  <Description />
  <CustomInfo />
  <DMEOptions>
    <listBoxTablesWidth>278</listBoxTablesWidth>
  </DMEOptions>
  <DBParams>
    <SqlDialect>MS SQL</SqlDialect>
    <ConnectionString>Data Source=.;Initial Catalog=LikiDB;Integrated Security=True</ConnectionString>
    <LoginPrompt>False</LoginPrompt>
    <GateClass>Korzh.EasyQuery.DataGates.SqlClientGate</GateClass>
  </DBParams>
  <Tables>
    <Table class="db" alias="Users" schema="dbo" db="" dsgnLayout="" priority="1000" name="Users" hints="" quote="False" />
  </Tables>
  <Links />
  <Operators>
    <Operator id="Equal" caption="is equal to" expr="{expr1} = {expr2}" format="{expr1} [[is equal to]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" group="Common operators" cond="False" tables="">
      <Types>String,WideString,Byte,Word,Int,Int64,Bool,Float,Currency,BCD,Autoinc,Memo,FixedChar</Types>
      <Exprs defType="Unknown" />
    </Operator>
    <Operator id="NotEqual" caption="is not equal to" expr="{expr1} &lt;&gt; {expr2}" format="{expr1} [[is not equal to]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" group="Common operators" cond="False" tables="">
      <Types>String,WideString,Byte,Word,Int,Int64,Bool,Float,Currency,BCD,Autoinc,Memo,FixedChar</Types>
      <Exprs defType="Unknown" />
    </Operator>
    <Operator id="LessThan" caption="is less than" expr="{expr1} &lt; {expr2}" format="{expr1} [[is less than]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" group="Common operators" cond="False" tables="">
      <Types>String,WideString,Byte,Word,Int,Int64,Bool,Float,Currency,BCD,Autoinc,Memo,FixedChar</Types>
      <Exprs defType="Unknown" />
    </Operator>
    <Operator id="LessOrEqual" caption="is less than or equal to" expr="{expr1} &lt;= {expr2}" format="{expr1} [[is less than or equal to]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" group="Common operators" cond="False" tables="">
      <Types>String,WideString,Byte,Word,Int,Int64,Bool,Float,Currency,BCD,Autoinc,Memo,FixedChar</Types>
      <Exprs defType="Unknown" />
    </Operator>
    <Operator id="GreaterThan" caption="is greater than" expr="{expr1} &gt; {expr2}" format="{expr1} [[is greater than]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" group="Common operators" cond="False" tables="">
      <Types>String,WideString,Byte,Word,Int,Int64,Bool,Float,Currency,BCD,Autoinc,Memo,FixedChar</Types>
      <Exprs defType="Unknown" />
    </Operator>
    <Operator id="GreaterOrEqual" caption="is greater than or equal to" expr="{expr1} &gt;= {expr2}" format="{expr1} [[is greater than or equal to]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" group="Common operators" cond="False" tables="">
      <Types>String,WideString,Byte,Word,Int,Int64,Bool,Float,Currency,BCD,Autoinc,Memo,FixedChar</Types>
      <Exprs defType="Unknown" />
    </Operator>
    <Operator id="IsNull" caption="is null" expr="{expr1} IS NULL" format="{expr1} [[is null]] " constFmt="{const}" kind="Scalar" caseIns="False" group="Common operators" cond="False" tables="">
      <Types>String,WideString,Byte,Word,Int,Int64,Bool,Float,Currency,BCD,Autoinc,Memo,FixedChar</Types>
      <Exprs defType="Unknown" />
    </Operator>
    <Operator id="IsNotNull" caption="is not null" expr="{expr1} IS NOT NULL" format="{expr1} [[is not null]] " constFmt="{const}" kind="Scalar" caseIns="False" group="Common operators" cond="False" tables="">
      <Types>String,WideString,Byte,Word,Int,Int64,Bool,Float,Currency,BCD,Autoinc,Memo,FixedChar</Types>
      <Exprs defType="Unknown" />
    </Operator>
    <Operator id="IsTrue" caption="is true" expr="{expr1} = ${true}" format="{expr1} [[is true]]" constFmt="{const}" kind="Scalar" caseIns="False" group="Boolean operators" cond="False" tables="">
      <Types>Bool</Types>
      <Exprs defType="Unknown" />
    </Operator>
    <Operator id="NotTrue" caption="is not true" expr="(({expr1} &lt;&gt; ${true}) OR ({expr1} IS NULL))" format="{expr1} [[is not true]]" constFmt="{const}" kind="Scalar" caseIns="False" group="Boolean operators" cond="False" tables="">
      <Types>Bool</Types>
      <Exprs defType="Unknown" />
    </Operator>
    <Operator id="InList" caption="is in list" expr="{expr1} in ({expr2})" format="{expr1} [[is in list]] {expr2}" constFmt="{const}" kind="List" caseIns="False" group="Common operators" cond="False" tables="">
      <Types>String,WideString,Byte,Word,Int,Int64,Bool,Float,Currency,BCD,Autoinc,Memo,FixedChar</Types>
      <Exprs defType="Unknown" />
    </Operator>
    <Operator id="NotInList" caption="is not in list" expr="NOT ({expr1} in ({expr2}))" format="{expr1} [[is not in list]] {expr2}" constFmt="{const}" kind="List" caseIns="False" group="Common operators" cond="False" tables="">
      <Types>String,WideString,Byte,Word,Int,Int64,Bool,Float,Currency,BCD,Autoinc,Memo,FixedChar</Types>
      <Exprs defType="Unknown" />
    </Operator>
    <Operator id="Between" caption="is between" expr="{expr1} BETWEEN {expr2} AND {expr3}" format="{expr1} [[is between]] {expr2} and {expr3}" constFmt="{const}" kind="Scalar" caseIns="False" group="Common operators" cond="False" tables="">
      <Types>String,WideString,Byte,Word,Int,Int64,Bool,Float,Currency,BCD,Autoinc,Memo,FixedChar</Types>
      <Exprs defType="Unknown" />
    </Operator>
    <Operator id="NotBetween" caption="is not between" expr="NOT ({expr1} BETWEEN {expr2} AND {expr3})" format="{expr1} [[is not between]] {expr2} and {expr3}" constFmt="{const}" kind="Scalar" caseIns="False" group="Common operators" cond="False" tables="">
      <Types>String,WideString,Byte,Word,Int,Int64,Bool,Float,Currency,BCD,Autoinc,Memo,FixedChar</Types>
      <Exprs defType="Unknown" />
    </Operator>
    <Operator id="StartsWith" caption="starts with" expr="{expr1} LIKE {expr2}" format="{expr1} [[starts with]] {expr2}" constFmt="{const}{ws}" kind="Scalar" caseIns="False" group="String operators" cond="False" tables="">
      <Types>String,WideString,Memo,FixedChar</Types>
      <Exprs defType="Unknown" />
      <Editors>
        <Default id="Text value editor" type="EDIT" resType="String">
          <Value text="" />
        </Default>
      </Editors>
    </Operator>
    <Operator id="NotStartsWith" caption="does not start with" expr="NOT ({expr1} LIKE {expr2})" format="{expr1} [[does not start with]] {expr2}" constFmt="{const}{ws}" kind="Scalar" caseIns="False" group="String operators" cond="False" tables="">
      <Types>String,WideString,Memo,FixedChar</Types>
      <Exprs defType="Unknown" />
      <Editors>
        <Default id="Text value editor" type="EDIT" resType="String">
          <Value text="" />
        </Default>
      </Editors>
    </Operator>
    <Operator id="Contains" caption="contains" expr="{expr1} LIKE {expr2}" format="{expr1} [[contains]] {expr2}" constFmt="{ws}{const}{ws}" kind="Scalar" caseIns="False" group="String operators" cond="False" tables="">
      <Types>String,WideString,Memo,FixedChar</Types>
      <Exprs defType="Unknown" />
      <Editors>
        <Default id="Text value editor" type="EDIT" resType="String">
          <Value text="" />
        </Default>
      </Editors>
    </Operator>
    <Operator id="NotContains" caption="does not contain" expr="NOT ({expr1} LIKE {expr2})" format="{expr1} [[does not contain]] {expr2}" constFmt="{ws}{const}{ws}" kind="Scalar" caseIns="False" group="String operators" cond="False" tables="">
      <Types>String,WideString,Memo,FixedChar</Types>
      <Exprs defType="Unknown" />
      <Editors>
        <Default id="Text value editor" type="EDIT" resType="String">
          <Value text="" />
        </Default>
      </Editors>
    </Operator>
    <Operator id="InSubQuery" caption="in sub query" expr="{expr1} IN ({expr2})" format="{expr1} [[in sub query]] {expr2}" constFmt="{const}" kind="Query" caseIns="False" group="Common operators" cond="False" tables="">
      <Types>String,WideString,Byte,Word,Int,Int64,Bool,Float,Currency,BCD,Autoinc,Memo,FixedChar</Types>
      <Exprs defType="Byte" />
    </Operator>
    <Operator id="DateBeforeSpecial" caption="is before (special date)" expr="{expr1} &lt; {expr2}" format="{expr1} [[is before]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" group="Date/time operators" cond="False" tables="">
      <Types>Date,DateTime</Types>
      <Exprs defType="Unknown" />
      <Editors>
        <Default id="CustomList value editor" type="CUSTOMLIST" resType="Unknown" name="SpecDateValues" />
      </Editors>
    </Operator>
    <Operator id="DateBeforePrecise" caption="is before (precise date)" expr="{expr1} &lt; {expr2}" format="{expr1} [[is before]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" group="Date/time operators" cond="False" tables="">
      <Types>Date,DateTime</Types>
      <Exprs defType="Unknown" />
      <Editors>
        <Default id="DateTime value editor" type="DATETIME" resType="Unknown" />
      </Editors>
    </Operator>
    <Operator id="DateAfterSpecial" caption="is after (special date)" expr="{expr1} &gt;= {expr2}" format="{expr1} [[is after]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" group="Date/time operators" cond="False" tables="">
      <Types>Date,DateTime</Types>
      <Exprs defType="Unknown" />
      <Editors>
        <Default id="CustomList value editor" type="CUSTOMLIST" resType="Unknown" name="SpecDateValues" />
      </Editors>
    </Operator>
    <Operator id="DateAfterPrecise" caption="is after (precise date)" expr="{expr1} &gt;= {expr2}" format="{expr1} [[is after]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" group="Date/time operators" cond="False" tables="">
      <Types>Date,DateTime</Types>
      <Exprs defType="Unknown" />
      <Editors>
        <Default id="DateTime value editor" type="DATETIME" resType="Unknown" />
      </Editors>
    </Operator>
    <Operator id="DatePeriodPrecise" caption="is between" expr="{expr1} BETWEEN {expr2} AND {expr3}" format="{expr1} [[is between]] {expr2} and {expr3}" constFmt="{const}" kind="Scalar" caseIns="False" group="Date/time operators" cond="False" tables="">
      <Types>Date,DateTime</Types>
      <Exprs defType="Unknown" />
      <Editors>
        <Default id="DateTime value editor" type="DATETIME" resType="Unknown" />
      </Editors>
    </Operator>
    <Operator id="DateEqualSpecial" caption="is (special date)" expr="{expr1} = {expr2}" format="{expr1} [[is]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" group="Date/time operators" cond="False" tables="">
      <Types>Date,DateTime</Types>
      <Exprs defType="Unknown" />
      <Editors>
        <Default id="CustomList value editor" type="CUSTOMLIST" resType="Unknown" name="SpecDateValues" />
      </Editors>
    </Operator>
    <Operator id="DateEqualPrecise" caption="is (precise date)" expr="{expr1} = {expr2}" format="{expr1} [[is]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" group="Date/time operators" cond="False" tables="">
      <Types>Date,DateTime</Types>
      <Exprs defType="Unknown" />
      <Editors>
        <Default id="DateTime value editor" type="DATETIME" resType="Unknown" />
      </Editors>
    </Operator>
    <Operator id="DateNotEqualSpecial" caption="is not (special date)" expr="{expr1} &lt;&gt; {expr2}" format="{expr1} [[is not]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" group="Date/time operators" cond="False" tables="">
      <Types>Date,DateTime</Types>
      <Exprs defType="Unknown" />
      <Editors>
        <Default id="CustomList value editor" type="CUSTOMLIST" resType="Unknown" name="SpecDateValues" />
      </Editors>
    </Operator>
    <Operator id="DateNotEqualPrecise" caption="is not (precise date)" expr="{expr1} &lt;&gt; {expr2}" format="{expr1} [[is not]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" group="Date/time operators" cond="False" tables="">
      <Types>Date,DateTime</Types>
      <Exprs defType="Unknown" />
      <Editors>
        <Default id="DateTime value editor" type="DATETIME" resType="Unknown" />
      </Editors>
    </Operator>
    <Operator id="TimeBeforeSpecial" caption="is before (special time)" expr="{expr1} &lt; {expr2}" format="{expr1} [[is before]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" group="Date/time operators" cond="False" tables="">
      <Types>Time</Types>
      <Exprs defType="Unknown" />
      <Editors>
        <Default id="CustomList value editor" type="CUSTOMLIST" resType="Unknown" name="SpecTimeValues" />
      </Editors>
    </Operator>
    <Operator id="TimeBeforePrecise" caption="is before (precise time)" expr="{expr1} &lt; {expr2}" format="{expr1} [[is before]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" group="Date/time operators" cond="False" tables="">
      <Types>Time</Types>
      <Exprs defType="Unknown" />
      <Editors>
        <Default id="DateTime value editor" type="DATETIME" resType="Unknown" />
      </Editors>
    </Operator>
    <Operator id="TimeAfterSpecial" caption="is after (special time)" expr="{expr1} &gt;= {expr2}" format="{expr1} [[is after]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" group="Date/time operators" cond="False" tables="">
      <Types>Time</Types>
      <Exprs defType="Unknown" />
      <Editors>
        <Default id="CustomList value editor" type="CUSTOMLIST" resType="Unknown" name="SpecTimeValues" />
      </Editors>
    </Operator>
    <Operator id="TimeAfterPrecise" caption="is after (precise time)" expr="{expr1} &gt;= {expr2}" format="{expr1} [[is after]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" group="Date/time operators" cond="False" tables="">
      <Types>Time</Types>
      <Exprs defType="Unknown" />
      <Editors>
        <Default id="DateTime value editor" type="DATETIME" resType="Unknown" />
      </Editors>
    </Operator>
    <Operator id="TimePeriodPrecise" caption="is between" expr="{expr1} BETWEEN {expr2} AND {expr3}" format="{expr1} [[is between]] {expr2} and {expr3}" constFmt="{const}" kind="Scalar" caseIns="False" group="Date/time operators" cond="False" tables="">
      <Types>Time</Types>
      <Exprs defType="Unknown" />
      <Editors>
        <Default id="DateTime value editor" type="DATETIME" resType="Unknown" />
      </Editors>
    </Operator>
    <Operator id="MaximumOfAttr" caption="is maximum of" expr="{expr1} = (SELECT MAX({expr2.field}) from {expr2.table})" format="{expr1} [[is equal to maximum of]] {expr2}" constFmt="{const}" kind="Attribute" caseIns="False" group="Other operators" cond="False" tables="">
      <Types>String,WideString,Byte,Word,Int,Int64,Bool,Float,Currency,BCD,Autoinc,Memo,FixedChar,Date,DateTime,Time</Types>
      <Exprs defType="Unknown" />
    </Operator>
  </Operators>
  <Editors />
  <Entities maxId="0">
    <Entity name="Users" UIC="True" UIR="True" UIS="True">
      <Attr id="Users.UserID" kind="Data" expr="UserID" caption="UserID" type="Int" size="0" UIC="True" UIR="True" UIS="True" customFunc="" quote="False" UAL="True" aggr="False" tables="Users">
        <Operators>Equal,Between,LessThan,LessOrEqual,GreaterThan,GreaterOrEqual,NotBetween,NotEqual,MaximumOfAttr,InSubQuery,IsNull,IsNotNull</Operators>
        <Editors />
      </Attr>
      <Attr id="Users.EmailAddress" kind="Data" expr="EmailAddress" caption="EmailAddress" type="String" size="1000" UIC="True" UIR="True" UIS="True" customFunc="" quote="False" UAL="True" aggr="False" tables="Users">
        <Operators>StartsWith,Contains,Equal,NotStartsWith,NotContains,NotEqual,InSubQuery,IsNull,IsNotNull</Operators>
        <Editors />
      </Attr>
      <Attr id="Users.Title" kind="Data" expr="Title" caption="Title" type="String" size="50" UIC="True" UIR="True" UIS="True" customFunc="" quote="False" UAL="True" aggr="False" tables="Users">
        <Operators>StartsWith,Contains,Equal,NotStartsWith,NotContains,NotEqual,InSubQuery,IsNull,IsNotNull</Operators>
        <Editors />
      </Attr>
      <Attr id="Users.FirstName" kind="Data" expr="FirstName" caption="FirstName" type="String" size="1000" UIC="True" UIR="True" UIS="True" customFunc="" quote="False" UAL="True" aggr="False" tables="Users">
        <Operators>StartsWith,Contains,Equal,NotStartsWith,NotContains,NotEqual,InSubQuery,IsNull,IsNotNull</Operators>
        <Editors />
      </Attr>
      <Attr id="Users.MiddleName" kind="Data" expr="MiddleName" caption="MiddleName" type="String" size="1000" UIC="True" UIR="True" UIS="True" customFunc="" quote="False" UAL="True" aggr="False" tables="Users">
        <Operators>StartsWith,Contains,Equal,NotStartsWith,NotContains,NotEqual,InSubQuery,IsNull,IsNotNull</Operators>
        <Editors />
      </Attr>
      <Attr id="Users.LastName" kind="Data" expr="LastName" caption="LastName" type="String" size="1000" UIC="True" UIR="True" UIS="True" customFunc="" quote="False" UAL="True" aggr="False" tables="Users">
        <Operators>StartsWith,Contains,Equal,NotStartsWith,NotContains,NotEqual,InSubQuery,IsNull,IsNotNull</Operators>
        <Editors />
      </Attr>
      <Attr id="Users.Suffix" kind="Data" expr="Suffix" caption="Suffix" type="String" size="100" UIC="True" UIR="True" UIS="True" customFunc="" quote="False" UAL="True" aggr="False" tables="Users">
        <Operators>StartsWith,Contains,Equal,NotStartsWith,NotContains,NotEqual,InSubQuery,IsNull,IsNotNull</Operators>
        <Editors />
      </Attr>
      <Attr id="Users.Password" kind="Data" expr="Password" caption="Password" type="String" size="0" UIC="True" UIR="True" UIS="True" customFunc="" quote="False" UAL="True" aggr="False" tables="Users">
        <Operators>StartsWith,Contains,Equal,NotStartsWith,NotContains,NotEqual,InSubQuery,IsNull,IsNotNull</Operators>
        <Editors />
      </Attr>
      <Attr id="Users.RoleID" kind="Data" expr="RoleID" caption="RoleID" type="Int" size="0" UIC="True" UIR="True" UIS="True" customFunc="" quote="False" UAL="True" aggr="False" tables="Users">
        <Operators>Equal,Between,LessThan,LessOrEqual,GreaterThan,GreaterOrEqual,NotBetween,NotEqual,MaximumOfAttr,InSubQuery,IsNull,IsNotNull</Operators>
        <Editors />
      </Attr>
    </Entity>
  </Entities>
</DataModel>